package model.dao;

import java.util.List;

import model.basemodel.BaseLand;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Land extends BaseLand<Land> {
	public static final Land dao = new Land();
	
	public enum LandTypeEnum{
		普通土地,
		黑土地
	}
	
	public enum IsOpenEnum{
		未开耕,
		已开耕
	}
	
	/**
	 * 普通农场添加土地
	 * @author wh
	 * @param userId 
	 * @since 2016-11-8
	 */
	public boolean addLand(String userId) {
		try {
			// 添加20块普通土地 
			for(int i = 0; i < 20; i++){
				this.set("landId", null);
				this.set("farmId", userId);
				this.set("landType", LandTypeEnum.普通土地.ordinal());
				if(i < 10){// 10块开耕的
					this.set("isOpen", IsOpenEnum.未开耕.ordinal());
				}else{// 10块没有开耕
					this.set("isOpen", IsOpenEnum.已开耕.ordinal());
				}
				this.save();
			}
			return true;
		} catch (Exception e) {
			return false;
		}
	}

	/**
	 * 查询该农场的土地
	 * @author wh
	 * @since 2016-11-9
	 * @param farmId
	 */
	public List<Record> getLandByFarm(Object farmId) {
		String sql = "SELECT * FROM t_land AS tl LEFT JOIN t_land_tree AS tlt ON tlt.landId = tl.landId";
		sql += " LEFT JOIN (SELECT MAX(pickFruitTime) AS pickFruitTime,treeId FROM t_temp_pick GROUP BY treeId)";
		sql += " AS temp ON tlt.landTreeId = temp.treeId  WHERE tl.farmId = ? ORDER BY tl.isOpen DESC";
		return Db.find(sql, farmId);
	}

	/**
	 * 查询该用户可种植的土地
	 * @author wh
	 * @since 2016-11-9
	 * @param object
	 */
	public List<Land> findPlantLand(Object userId) {
		String sql = "SELECT * FROM t_land WHERE landId NOT IN(SELECT landId FROM t_land_tree) AND isOpen = 1 AND farmId = ?";
		return this.find(sql, userId);
	}

	/**
	 * 给用户开耕一块土地 
	 * @author wh
	 * @since 2016-11-14
	 * @param farmId
	 */
	public void openLand(Object farmId) {
		String sql = "SELECT * FROM t_land WHERE farmId = ? AND isOpen = 0";
		Land land = this.findFirst(sql, farmId);
		land.set("isOpen", 1).update();
		OpenLand openLand = new OpenLand();
		openLand.set("openLandId", null);
		openLand.set("farmId", farmId);
		openLand.set("landId", land.get("landId"));
		openLand.save();
	}

	/**
	 * 得到种植详情
	 * @author wh
	 * @since 2016-11-15
	 * @param userId
	 * @return 
	 */
	public List<Record> getPlantDetail(String userId) {
		String sql = "SELECT * FROM t_land AS tl LEFT JOIN t_land_tree AS tlt ON tlt.landId = tl.landId";
		sql += " LEFT JOIN (SELECT SUM(pickFruitNum) AS dayPickFruitNum, treeId FROM t_temp_pick WHERE pickFruitTime >";
		sql += " CURRENT_DATE() GROUP BY treeId) AS pick ON tlt.landTreeId = pick.treeId";
		sql += " WHERE tl.farmId = ? ORDER BY tl.isOpen DESC,tlt.treeType ASC";
		return Db.find(sql, userId);
	}
}
